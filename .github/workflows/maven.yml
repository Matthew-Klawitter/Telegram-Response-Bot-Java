name: CI/CD

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file telegramresponsebotjava/pom.xml
    - name: Upload artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: telegram-response-bot-java-build.jar
        path: ./telegramresponsebotjava/target/telegram-response-bot-java-build.jar
        
  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: maven.yml
          workflow_conclusion: success
          name: telegram-response-bot-java-build.jar
          path: ./telegramresponsebotjava/target/telegram-response-bot-java-build.jar
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload release artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./telegramresponsebotjava/target/telegram-response-bot-java-build.jar
          asset_name: telegramresponsebotjava-build.jar
          asset_content_type: application/java-archive
